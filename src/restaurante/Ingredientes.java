/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurante;

import java.io.File;
import java.io.FileWriter;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author WORKGROUP
 */
public class Ingredientes extends javax.swing.JFrame {

    String cantp, cantb, cantpo, nompto, nombebi, nompos;
    String direccion = "src\\archivos\\ingredientes.txt";
    File ingredients = new File(direccion);

    public Ingredientes() {
        initComponents();
        combobebida.setVisible(false);
        combopostre.setVisible(false);
        this.cantBebis.setVisible(false);
        this.cantPost.setVisible(false);
        cont.setEnabled(false);
    }

    void mostrarError(String titulo, String mensaje) {
        JOptionPane.showMessageDialog(this,
                mensaje,
                titulo,
                JOptionPane.ERROR_MESSAGE);
    }

    void escribirIngedientes(String nom, int cant) {
        System.out.println("here");
        try (FileWriter bw = new FileWriter(ingredients, true)) {
            Object p = nom;
            Object c = cant;
            bw.write(p + "," + c + "," + "\r" + "\n");

        } catch (NullPointerException ex) {
            mostrarError("Datos faltantes", "Los datos en la tabla no están completos");
        } catch (NumberFormatException ex) {
            mostrarError("Formato equivocado", "Los números en la tabla no tienen el formato correcto");
        } catch (Exception ex) {
            mostrarError("Error", "Algo inesperado ocurrió");
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombreM = new javax.swing.JPanel();
        agg = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ingredientes = new javax.swing.JTable();
        labelnumero = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cantPtos = new javax.swing.JTextField();
        cantBebis = new javax.swing.JTextField();
        cantPost = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cont = new javax.swing.JToggleButton();
        comboplato = new javax.swing.JComboBox<>();
        combobebida = new javax.swing.JComboBox<>();
        combopostre = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nombreM.setBackground(new java.awt.Color(255, 255, 255));
        nombreM.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        agg.setBackground(new java.awt.Color(255, 255, 255));
        agg.setText("Agregar");
        agg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggActionPerformed(evt);
            }
        });
        nombreM.add(agg, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, -1, -1));

        jLabel5.setForeground(new java.awt.Color(153, 0, 0));
        jLabel5.setText("Platos:");
        nombreM.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("Bebidas:");
        nombreM.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel7.setForeground(new java.awt.Color(153, 0, 0));
        jLabel7.setText("Postres:");
        nombreM.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        ingredientes.setBackground(new java.awt.Color(153, 0, 0));
        ingredientes.setForeground(new java.awt.Color(255, 255, 255));
        ingredientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "producto", "cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(ingredientes);

        nombreM.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 260, 158));
        nombreM.add(labelnumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 11, 32, 14));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ingredientes_bd3fc754-0795-4087-b16a-a9c57f9aac81.png"))); // NOI18N
        nombreM.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 320, 310));
        nombreM.add(cantPtos, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 60, -1));
        nombreM.add(cantBebis, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 60, -1));
        nombreM.add(cantPost, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 60, -1));

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("INGREDIENTES");
        nombreM.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 200, -1));

        cont.setText("CONTINUAR =>");
        cont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contActionPerformed(evt);
            }
        });
        nombreM.add(cont, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, -1));

        comboplato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "perro (sencillo)                                ,3000", "perro suizo                                      ,8500", "Salchipapa (sencilla)                       ,7000", "choripapa                                       ,1100", "Hamburguesa                                ,7500", "Pizza (personal)                            ,7000", "Pizza (mediana)                            ,12500", "Pizza (familiar)                              ,22500" }));
        nombreM.add(comboplato, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 120, -1));

        combobebida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "agua                                            ,3000", "Gaseosa personal                       ,2500", "Gaseosa litro                              ,4000", "cerveza                                      ,3000", "té                                               ,3000", "malteada                                   ,5000 ", "Limonada cerezada                    ,6000" }));
        nombreM.add(combobebida, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 120, -1));

        combopostre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "cupcake                                      ,4000", "tres leche                                   ,5000", "napoleon                                    ,5000", "helado                                        ,5000", "brownie                                      ,5000", "pastel (porcion)                         ,6000", "wafles                                        ,8000", "Cookie pie                                  ,13000" }));
        nombreM.add(combopostre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 120, -1));

        getContentPane().add(nombreM, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String separar(String n) {
        int con = 0;
        StringTokenizer tokens = new StringTokenizer(n, ",");
        while (tokens.hasMoreTokens()) {

            if (con == 0) {
                n = tokens.nextToken();
                con = 1;
            }
            if (con == 1) {
                tokens.nextToken();
            }
        }
        return n;
    }

    private void aggActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggActionPerformed
        DefaultTableModel model = (DefaultTableModel) ingredientes.getModel();
        try {
            if (!"".equals(cantPtos.getText()) || !"".equals(cantBebis.getText()) || !"".equals(cantPost.getText())) {
                if (!(comboplato.getSelectedItem() == null)) {
                    cantp = this.cantPtos.getText();
                    nompto = this.comboplato.getSelectedItem().toString();
                    nompto = separar(nompto);
                    if (Integer.parseInt(cantp) != 0) {

                        System.out.println("f");
                        model.addRow(new String[]{nompto, cantp});
                        escribirIngedientes(nompto, Integer.parseInt(cantp));
                        int i = comboplato.getSelectedIndex();
                        System.out.println(i);
                        comboplato.removeItemAt(i);
                        if (comboplato.getItemAt(i) == null || comboplato.getItemAt(i).equals("")) {
                            comboplato.setEnabled(false);
                            cantPtos.setEnabled(false);
                            cantPtos.setText("");
                            combobebida.setVisible(true);
                            this.cantBebis.setVisible(true);
                        }
                    }

                } else if (!(combobebida.getSelectedItem() == null)) {
                    cantb = this.cantBebis.getText();
                    nombebi = this.combobebida.getSelectedItem().toString();
                    nombebi = separar(nombebi);
                    if (Integer.parseInt(cantb) != 0) {
                        model.addRow(new String[]{nombebi, cantb});
                        escribirIngedientes(nombebi, Integer.parseInt(cantb));
                        int i = combobebida.getSelectedIndex();
                        System.out.println(i);
                        combobebida.removeItemAt(i);
                        if (combobebida.getItemAt(i) == null || combobebida.getItemAt(i).equals("")) {
                            combobebida.setEnabled(false);
                            cantBebis.setEnabled(false);
                            cantBebis.setText("");
                            combobebida.setVisible(true);
                            combopostre.setVisible(true);
                            this.cantPost.setVisible(true);
                        }
                    }
                } else if (!(combopostre.getSelectedItem() == null)) {
                    cantpo = this.cantPost.getText();
                    nompos = this.combopostre.getSelectedItem().toString();
                    nompos = separar(nompos);
                    if (Integer.parseInt(cantpo) != 0) {
                        model.addRow(new String[]{nompos, cantpo});
                        escribirIngedientes(nompos, Integer.parseInt(cantpo));
                        System.out.println("kha?");
                        int i = combopostre.getSelectedIndex();
                        System.out.println(i);
                        combopostre.removeItemAt(i);
                        if (combopostre.getItemAt(i) == null || combopostre.getItemAt(i).equals("")) {
                            combopostre.setEnabled(false);
                            cantPost.setEnabled(false);
                            cantPost.setText("");
                            this.agg.setEnabled(false);
                            cont.setEnabled(true);
                            JOptionPane.showMessageDialog(null, "Ingredientes agregados." + "\n" + "Presiona continuar para seguir al programa.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                } else {
                    System.out.println("ya");
                }

            } else {
                JOptionPane.showMessageDialog(null, "No puede dejar el campo vacio  ", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {

        }

    }//GEN-LAST:event_aggActionPerformed

    private void contActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contActionPerformed
        this.dispose();
        Bienvenida x = new Bienvenida();
        x.setVisible(true);
        x.setLocationRelativeTo(null);
        x.setResizable(false);
    }//GEN-LAST:event_contActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ingredientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agg;
    private javax.swing.JTextField cantBebis;
    private javax.swing.JTextField cantPost;
    private javax.swing.JTextField cantPtos;
    private javax.swing.JComboBox<String> combobebida;
    private javax.swing.JComboBox<String> comboplato;
    private javax.swing.JComboBox<String> combopostre;
    private javax.swing.JToggleButton cont;
    public javax.swing.JTable ingredientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JLabel labelnumero;
    private javax.swing.JPanel nombreM;
    // End of variables declaration//GEN-END:variables
}
